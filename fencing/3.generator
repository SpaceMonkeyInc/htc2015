#!/usr/bin/env python

# generate 1000s of points to test against a rectangle

import random

top = 300
bottom = 600
left = 300
right = 600

right_margin = 900
bottom_margin = 900

num_points = 50000

svg_f = open('4.svg', 'w')
in_f = open('4.in', 'w')
out_f = open('4.out', 'w')

svg_f.write('''<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
                     "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" xmlns="http://www.w3.org/2000/svg">
    <path fill="lightblue"
          d="M{left},{top}L{right},{top}L{right},{bottom},L{left},{bottom}Z"/>
'''.format(top=top, left=left, bottom=bottom, right=right))

in_f.write('''<svg version="1.1" xmlns="http://www.w3.org/2000/svg">
    <path id="compound"
          d="M{left},{top}L{right},{top}L{right},{bottom},L{left},{bottom}Z"/>
</svg>

'''.format(top=top, left=left, bottom=bottom, right=right))

for _ in xrange(num_points):
    x = random.uniform(0, right_margin)
    y = random.uniform(0, bottom_margin)
    in_f.write('%f, %f\n' % (x, y))
    inside = x >= left and x <= right and y >= top and y <= bottom
    color = 'green' if inside else 'red'
    out_f.write(('%s\n' % inside).lower())
    svg_f.write('<circle fill="%s" cx="%s" cy="%s" r="1"/>\n' % (color, x, y))

svg_f.write('</svg>\n')

svg_f.close()
in_f.close()
out_f.close()
